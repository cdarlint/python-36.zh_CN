# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-01-05 15:01+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/hmac.rst:2
msgid ":mod:`hmac` --- Keyed-Hashing for Message Authentication"
msgstr ""

#: ../../library/hmac.rst:10
msgid "**Source code:** :source:`Lib/hmac.py`"
msgstr ""

#: ../../library/hmac.rst:14
msgid "This module implements the HMAC algorithm as described by :rfc:`2104`."
msgstr ""

#: ../../library/hmac.rst:19
msgid ""
"Return a new hmac object.  *key* is a bytes or bytearray object giving the "
"secret key.  If *msg* is present, the method call ``update(msg)`` is made. "
"*digestmod* is the digest name, digest constructor or module for the HMAC "
"object to use. It supports any name suitable to :func:`hashlib.new` and "
"defaults to the :data:`hashlib.md5` constructor."
msgstr ""

#: ../../library/hmac.rst:25
msgid ""
"Parameter *key* can be a bytes or bytearray object. Parameter *msg* can be "
"of any type supported by :mod:`hashlib`. Parameter *digestmod* can be the "
"name of a hash algorithm."
msgstr ""

#: ../../library/hmac.rst:30
msgid "MD5 as implicit default digest for *digestmod* is deprecated."
msgstr ""

#: ../../library/hmac.rst:34
msgid "An HMAC object has the following methods:"
msgstr ""

#: ../../library/hmac.rst:38
msgid ""
"Update the hmac object with *msg*.  Repeated calls are equivalent to a "
"single call with the concatenation of all the arguments: ``m.update(a); "
"m.update(b)`` is equivalent to ``m.update(a + b)``."
msgstr ""

#: ../../library/hmac.rst:42
msgid "Parameter *msg* can be of any type supported by :mod:`hashlib`."
msgstr ""

#: ../../library/hmac.rst:48
msgid ""
"Return the digest of the bytes passed to the :meth:`update` method so far. "
"This bytes object will be the same length as the *digest_size* of the digest"
" given to the constructor.  It may contain non-ASCII bytes, including NUL "
"bytes."
msgstr ""

#: ../../library/hmac.rst:55
msgid ""
"When comparing the output of :meth:`digest` to an externally-supplied digest"
" during a verification routine, it is recommended to use the "
":func:`compare_digest` function instead of the ``==`` operator to reduce the"
" vulnerability to timing attacks."
msgstr ""

#: ../../library/hmac.rst:63
msgid ""
"Like :meth:`digest` except the digest is returned as a string twice the "
"length containing only hexadecimal digits.  This may be used to exchange the"
" value safely in email or other non-binary environments."
msgstr ""

#: ../../library/hmac.rst:69
msgid ""
"When comparing the output of :meth:`hexdigest` to an externally-supplied "
"digest during a verification routine, it is recommended to use the "
":func:`compare_digest` function instead of the ``==`` operator to reduce the"
" vulnerability to timing attacks."
msgstr ""

#: ../../library/hmac.rst:77
msgid ""
"Return a copy (\"clone\") of the hmac object.  This can be used to "
"efficiently compute the digests of strings that share a common initial "
"substring."
msgstr ""

#: ../../library/hmac.rst:81
msgid "A hash object has the following attributes:"
msgstr ""

#: ../../library/hmac.rst:85
msgid "The size of the resulting HMAC digest in bytes."
msgstr ""

#: ../../library/hmac.rst:89
msgid "The internal block size of the hash algorithm in bytes."
msgstr ""

#: ../../library/hmac.rst:95
msgid "The canonical name of this HMAC, always lowercase, e.g. ``hmac-md5``."
msgstr ""

#: ../../library/hmac.rst:100
msgid "This module also provides the following helper function:"
msgstr ""

#: ../../library/hmac.rst:104
msgid ""
"Return ``a == b``.  This function uses an approach designed to prevent "
"timing analysis by avoiding content-based short circuiting behaviour, making"
" it appropriate for cryptography.  *a* and *b* must both be of the same "
"type: either :class:`str` (ASCII only, as e.g. returned by "
":meth:`HMAC.hexdigest`), or a :term:`bytes-like object`."
msgstr ""

#: ../../library/hmac.rst:112
msgid ""
"If *a* and *b* are of different lengths, or if an error occurs, a timing "
"attack could theoretically reveal information about the types and lengths of"
" *a* and *b*â€”but not their values."
msgstr ""

#: ../../library/hmac.rst:122
msgid "Module :mod:`hashlib`"
msgstr ""

#: ../../library/hmac.rst:123
msgid "The Python module providing secure hash functions."
msgstr ""
