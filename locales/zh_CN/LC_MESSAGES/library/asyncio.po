# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-01-05 15:01+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Language-Team: Chinese (China) (https://www.transifex.com/python-doc/teams/5390/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/asyncio.rst:2
msgid ":mod:`asyncio` --- Asynchronous I/O, event loop, coroutines and tasks"
msgstr ""

#: ../../library/asyncio.rst:9
msgid "**Source code:** :source:`Lib/asyncio/`"
msgstr ""

#: ../../library/asyncio.rst:13
msgid ""
"This module provides infrastructure for writing single-threaded concurrent "
"code using coroutines, multiplexing I/O access over sockets and other "
"resources, running network clients and servers, and other related "
"primitives. Here is a more detailed list of the package contents:"
msgstr ""

#: ../../library/asyncio.rst:18
msgid ""
"a pluggable :ref:`event loop <asyncio-event-loop>` with various system-"
"specific implementations;"
msgstr ""

#: ../../library/asyncio.rst:21
msgid ""
":ref:`transport <asyncio-transport>` and :ref:`protocol <asyncio-protocol>` "
"abstractions (similar to those in `Twisted "
"<https://twistedmatrix.com/trac/>`_);"
msgstr ""

#: ../../library/asyncio.rst:24
msgid ""
"concrete support for TCP, UDP, SSL, subprocess pipes, delayed calls, and "
"others (some may be system-dependent);"
msgstr ""

#: ../../library/asyncio.rst:27
msgid ""
"a :class:`Future` class that mimics the one in the :mod:`concurrent.futures`"
" module, but adapted for use with the event loop;"
msgstr ""

#: ../../library/asyncio.rst:30
msgid ""
"coroutines and tasks based on ``yield from`` (:PEP:`380`), to help write "
"concurrent code in a sequential fashion;"
msgstr ""

#: ../../library/asyncio.rst:33
msgid "cancellation support for :class:`Future`\\s and coroutines;"
msgstr ""

#: ../../library/asyncio.rst:35
msgid ""
":ref:`synchronization primitives <asyncio-sync>` for use between coroutines "
"in a single thread, mimicking those in the :mod:`threading` module;"
msgstr ""

#: ../../library/asyncio.rst:38
msgid ""
"an interface for passing work off to a threadpool, for times when you "
"absolutely, positively have to use a library that makes blocking I/O calls."
msgstr ""

#: ../../library/asyncio.rst:42
msgid ""
"Asynchronous programming is more complex than classical \"sequential\" "
"programming: see the :ref:`Develop with asyncio <asyncio-dev>` page which "
"lists common traps and explains how to avoid them. :ref:`Enable the debug "
"mode <asyncio-debug-mode>` during development to detect common issues."
msgstr ""

#: ../../library/asyncio.rst:47
msgid "Table of contents:"
msgstr ""

#: ../../library/asyncio.rst:64
msgid ""
"The :mod:`asyncio` module was designed in :PEP:`3156`. For a motivational "
"primer on transports and protocols, see :PEP:`3153`."
msgstr ""
